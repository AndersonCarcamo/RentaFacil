# Configuración Nginx para servir archivos multimedia de EasyRent
# Archivo: nginx/nginx.conf

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Configuración de logs
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    
    # Configuración de performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 4096;
    server_tokens off;
    
    # Configuración de compresión
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;
    
    # Rate limiting para prevenir abuso
    limit_req_zone $binary_remote_addr zone=media_upload:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=media_access:10m rate=50r/s;
    
    # Configuración de cache para archivos estáticos
    map $sent_http_content_type $expires {
        default                    off;
        text/html                  epoch;
        text/css                   max;
        application/javascript     max;
        application/woff2          max;
        ~image/                    1y;
        ~video/                    1y;
        ~audio/                    1y;
    }
    
    expires $expires;
    
    # Servidor principal para media
    server {
        listen 80;
        server_name media.easyrent.local localhost;
        
        # Configuración general
        client_max_body_size 100M;  # Para uploads de video
        client_body_timeout 300s;
        client_header_timeout 300s;
        send_timeout 300s;
        
        # Configuración de seguridad básica
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options DENY;
        add_header X-XSS-Protection "1; mode=block";
        
        # Configuración de CORS para media
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Accept, Accept-Language, Content-Language, Content-Type" always;
        
        # Responder a OPTIONS para CORS preflight
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
            add_header Access-Control-Allow-Headers "Accept, Accept-Language, Content-Language, Content-Type";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
        
        # =====================================
        # SERVIR ARCHIVOS MULTIMEDIA ESTÁTICOS
        # =====================================
        
        # Imágenes y videos estáticos
        location /media/ {
            alias /var/www/easyrent/media/;
            
            # Rate limiting para acceso a media
            limit_req zone=media_access burst=20 nodelay;
            
            # Configuración de cache agresiva
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # Configuración para diferentes tipos de archivo
            location ~* \.(jpg|jpeg|png|gif|webp|svg)$ {
                alias /var/www/easyrent/media/;
                
                # Intentar servir archivo, si no existe ir a redimensionado
                try_files $uri $uri/ @image_resize;
                
                # Headers específicos para imágenes
                add_header X-Content-Type-Options nosniff;
                add_header X-Served-By "Nginx-Static";
            }
            
            location ~* \.(mp4|webm|ogg|avi|mov)$ {
                alias /var/www/easyrent/media/;
                
                # Soporte para range requests (streaming)
                add_header Accept-Ranges bytes;
                add_header X-Content-Type-Options nosniff;
                add_header X-Served-By "Nginx-Static";
                
                # Buffer para video streaming
                sendfile on;
                sendfile_max_chunk 1m;
                tcp_nopush on;
                tcp_nodelay on;
            }
            
            # Thumbnails - cache más agresivo
            location ~* /thumbs/.*\.(jpg|jpeg|png|webp)$ {
                alias /var/www/easyrent/media/;
                expires 1y;
                add_header Cache-Control "public, immutable";
                add_header X-Content-Type-Options nosniff;
                add_header X-Served-By "Nginx-Thumb";
            }
        }
        
        # =====================================
        # REDIMENSIONADO DINÁMICO DE IMÁGENES  
        # =====================================
        
        # Endpoint para redimensionado on-demand
        location @image_resize {
            # Proxy a servicio de redimensionado (FastAPI)
            proxy_pass http://easyrent_api/media/resize$request_uri;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Cache de imágenes redimensionadas
            proxy_cache media_cache;
            proxy_cache_valid 200 1d;
            proxy_cache_use_stale error timeout invalid_header updating;
            proxy_cache_background_update on;
            
            # Headers para debugging
            add_header X-Cache-Status $upstream_cache_status;
            add_header X-Served-By "Nginx-Resize";
        }
        
        # =====================================
        # PROXY A API PARA UPLOADS
        # =====================================
        
        # Endpoints de upload (proxy a FastAPI)
        location ~ ^/api/v1/media/(upload|listings/.*/images|listings/.*/videos) {
            # Rate limiting para uploads
            limit_req zone=media_upload burst=5 nodelay;
            
            proxy_pass http://easyrent_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Configuración especial para uploads grandes
            proxy_request_buffering off;
            proxy_buffering off;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            
            # Headers para uploads
            add_header X-Upload-Handler "Nginx-Proxy";
        }
        
        # =====================================
        # HEALTH CHECK
        # =====================================
        
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # =====================================
        # ERROR PAGES
        # =====================================
        
        error_page 404 /404.html;
        location = /404.html {
            root /var/www/html;
        }
        
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /var/www/html;
        }
    }
    
    # =====================================
    # UPSTREAM PARA API
    # =====================================
    
    upstream easyrent_api {
        server app:8000;  # Para Docker Compose
        # server 127.0.0.1:8000;  # Para desarrollo local
        
        # Health check
        keepalive 32;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }
    
    # =====================================
    # CACHE ZONE PARA IMÁGENES
    # =====================================
    
    proxy_cache_path /var/cache/nginx/media
                     levels=1:2
                     keys_zone=media_cache:10m
                     max_size=1g
                     inactive=1d
                     use_temp_path=off;
}